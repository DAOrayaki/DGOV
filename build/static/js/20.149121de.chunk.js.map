{"version":3,"sources":["../../src/index.ts","../node_modules/react-bootstrap/esm/DropdownButton.js","components/Web3Connect/YakiButton.tsx","components/Web3Connect/index.tsx","../node_modules/react-bootstrap/esm/types.js"],"names":["propTypes","id","PropTypes","string","href","onClick","func","title","node","isRequired","disabled","bool","align","alignPropType","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","oneOf","bsPrefix","variant","size","DropdownButton","React","ref","children","props","_jsxs","Dropdown","_jsx","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName","yakiTokenRepo","YakiButtonComp","tokenInfo","goWallet","isError","networkId","className","netId","netIdName","toString","console","log","getNetwork","Button","balance","YakiButton","intId","web3","account","yakiAddress","disconnect","changeNetwork","useState","isYakiTokenLoaded","setIsYakiTokenLoaded","undefined","setTokenInfo","setNetworkId","setIsError","history","useHistory","updateTik","getYakiInfo","useEffect","a","eth","net","getId","networkType","loadYakiTokenRepo","error","init","then","setInterval","clearInterval","decimals","pointBanlanceOf","balanceAmount","BigNumber","dividedBy","Math","pow","toFixed","push","web3ConnectListenersAdded","networks","polygon","chainId","Number","chainName","nativeCurrency","name","symbol","rpcUrls","blockExplorerUrls","bsc","networkName","setError","window","ethereum","Error","request","method","params","message","Web3ConnectButton","account1","setProviderData","disconnectProvider","useWallet","connect","reset","status","loginStage","setLoginStage","itemKey","handleNetworkSwitch","login_state","localStorage","getItem","resetMetamask","connectMetamask","setItem","detectEthereumProvider","result","Container","Row","Col","md","slice","Item","as","process","alignDirection","oneOfType","shape","sm","lg","xl","xxl"],"mappings":"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","file":"static/js/20.149121de.chunk.js","sourcesContent":["\"use strict\";\n/**\n * Returns a Promise that resolves to the value of window.ethereum if it is\n * set within the given timeout, or null.\n * The Promise will not reject, but an error will be thrown if invalid options\n * are provided.\n *\n * @param options - Options bag.\n * @param options.mustBeMetaMask - Whether to only look for MetaMask providers.\n * Default: false\n * @param options.silent - Whether to silence console errors. Does not affect\n * thrown errors. Default: false\n * @param options.timeout - Milliseconds to wait for 'ethereum#initialized' to\n * be dispatched. Default: 3000\n * @returns A Promise that resolves with the Provider if it is detected within\n * given timeout, otherwise null.\n */\nfunction detectEthereumProvider({ mustBeMetaMask = false, silent = false, timeout = 3000, } = {}) {\n    _validateInputs();\n    let handled = false;\n    return new Promise((resolve) => {\n        if (window.ethereum) {\n            handleEthereum();\n        }\n        else {\n            window.addEventListener('ethereum#initialized', handleEthereum, { once: true });\n            setTimeout(() => {\n                handleEthereum();\n            }, timeout);\n        }\n        function handleEthereum() {\n            if (handled) {\n                return;\n            }\n            handled = true;\n            window.removeEventListener('ethereum#initialized', handleEthereum);\n            const { ethereum } = window;\n            if (ethereum && (!mustBeMetaMask || ethereum.isMetaMask)) {\n                resolve(ethereum);\n            }\n            else {\n                const message = mustBeMetaMask && ethereum\n                    ? 'Non-MetaMask window.ethereum detected.'\n                    : 'Unable to detect window.ethereum.';\n                !silent && console.error('@metamask/detect-provider:', message);\n                resolve(null);\n            }\n        }\n    });\n    function _validateInputs() {\n        if (typeof mustBeMetaMask !== 'boolean') {\n            throw new Error(`@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.`);\n        }\n        if (typeof silent !== 'boolean') {\n            throw new Error(`@metamask/detect-provider: Expected option 'silent' to be a boolean.`);\n        }\n        if (typeof timeout !== 'number') {\n            throw new Error(`@metamask/detect-provider: Expected option 'timeout' to be a number.`);\n        }\n    }\n}\nmodule.exports = detectEthereumProvider;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQVlBOzs7Ozs7Ozs7Ozs7Ozs7R0FlRztBQUNILFNBQVMsc0JBQXNCLENBQUMsRUFDOUIsY0FBYyxHQUFHLEtBQUssRUFDdEIsTUFBTSxHQUFHLEtBQUssRUFDZCxPQUFPLEdBQUcsSUFBSSxHQUNmLEdBQUcsRUFBRTtJQUVKLGVBQWUsRUFBRSxDQUFDO0lBRWxCLElBQUksT0FBTyxHQUFHLEtBQUssQ0FBQztJQUVwQixPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7UUFDN0IsSUFBSSxNQUFNLENBQUMsUUFBUSxFQUFFO1lBRW5CLGNBQWMsRUFBRSxDQUFDO1NBRWxCO2FBQU07WUFFTCxNQUFNLENBQUMsZ0JBQWdCLENBQ3JCLHNCQUFzQixFQUN0QixjQUFjLEVBQ2QsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQ2YsQ0FBQztZQUVGLFVBQVUsQ0FBQyxHQUFHLEVBQUU7Z0JBQ2QsY0FBYyxFQUFFLENBQUM7WUFDbkIsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1NBQ2I7UUFFRCxTQUFTLGNBQWM7WUFFckIsSUFBSSxPQUFPLEVBQUU7Z0JBQ1gsT0FBTzthQUNSO1lBQ0QsT0FBTyxHQUFHLElBQUksQ0FBQztZQUVmLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxzQkFBc0IsRUFBRSxjQUFjLENBQUMsQ0FBQztZQUVuRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsTUFBTSxDQUFDO1lBRTVCLElBQUksUUFBUSxJQUFJLENBQUMsQ0FBQyxjQUFjLElBQUksUUFBUSxDQUFDLFVBQVUsQ0FBQyxFQUFFO2dCQUN4RCxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7YUFDbkI7aUJBQU07Z0JBRUwsTUFBTSxPQUFPLEdBQUcsY0FBYyxJQUFJLFFBQVE7b0JBQ3hDLENBQUMsQ0FBQyx3Q0FBd0M7b0JBQzFDLENBQUMsQ0FBQyxtQ0FBbUMsQ0FBQztnQkFFeEMsQ0FBQyxNQUFNLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyw0QkFBNEIsRUFBRSxPQUFPLENBQUMsQ0FBQztnQkFDaEUsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ2Y7UUFDSCxDQUFDO0lBQ0gsQ0FBQyxDQUFDLENBQUM7SUFFSCxTQUFTLGVBQWU7UUFDdEIsSUFBSSxPQUFPLGNBQWMsS0FBSyxTQUFTLEVBQUU7WUFDdkMsTUFBTSxJQUFJLEtBQUssQ0FBQyw4RUFBOEUsQ0FBQyxDQUFDO1NBQ2pHO1FBQ0QsSUFBSSxPQUFPLE1BQU0sS0FBSyxTQUFTLEVBQUU7WUFDL0IsTUFBTSxJQUFJLEtBQUssQ0FBQyxzRUFBc0UsQ0FBQyxDQUFDO1NBQ3pGO1FBQ0QsSUFBSSxPQUFPLE9BQU8sS0FBSyxRQUFRLEVBQUU7WUFDL0IsTUFBTSxJQUFJLEtBQUssQ0FBQyxzRUFBc0UsQ0FBQyxDQUFDO1NBQ3pGO0lBQ0gsQ0FBQztBQUNILENBQUM7QUFsRkQsaUJBQVMsc0JBQXNCLENBQUMifQ==","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\n\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport loadYakiTokenRepo from \"src/logic/YakiToken\";\r\nimport BigNumber from 'bignumber.js'\r\nimport Web3 from 'web3'\r\n\r\n\r\ntype YakiWalletProps = {\r\n    web3: any\r\n    account: string\r\n    yakiAddress: string\r\n    disconnect: any\r\n    changeNetwork: any\r\n}\r\n\r\n\r\ntype YakiButtonProps = {\r\n    tokenInfo: any\r\n    goWallet: any\r\n    isError: boolean\r\n    networkId: string\r\n\r\n}\r\n\r\nconst YakiButtonComp: React.FC<YakiButtonProps> = ({ tokenInfo, goWallet, isError, networkId }) => {\r\n\r\n    const getNetwork = (netId: string) => {\r\n        let netIdName, explorerUrl;\r\n        switch (netId.toString()) {\r\n            case \"1\":\r\n                netIdName = 'Foundation'\r\n                explorerUrl = 'https://etherscan.io'\r\n                console.log('This is Foundation', netId)\r\n                break;\r\n            case \"3\":\r\n                netIdName = 'Ropsten'\r\n                explorerUrl = 'https://ropsten.etherscan.io'\r\n                console.log('This is Ropsten', netId)\r\n                break;\r\n            case \"4\":\r\n                netIdName = 'Rinkeby'\r\n                explorerUrl = 'https://rinkeby.etherscan.io'\r\n                console.log('This is Rinkeby', netId)\r\n                break;\r\n            case \"42\":\r\n                netIdName = 'Kovan'\r\n                explorerUrl = 'https://kovan.etherscan.io'\r\n                console.log('This is Kovan', netId)\r\n                break;\r\n            case \"99\":\r\n                netIdName = 'POA Core'\r\n                explorerUrl = 'https://poaexplorer.com'\r\n                console.log('This is Core', netId)\r\n                break;\r\n            case \"77\":\r\n                netIdName = 'POA Sokol'\r\n                explorerUrl = 'https://sokol.poaexplorer.com'\r\n                console.log('This is Sokol', netId)\r\n                break;\r\n            case \"56\":\r\n                netIdName = 'BSC'\r\n                explorerUrl = 'https://bscscan.com'\r\n                console.log('This is BSC', netId)\r\n                break;\r\n            case \"137\":\r\n                netIdName = 'Matic Network'\r\n                explorerUrl = 'https://polygonscan.com/'\r\n                console.log('This is Polygon', netId)\r\n                break;\r\n            default:\r\n                netIdName = 'Unknown'\r\n                console.log('This is an unknown network.', netId)\r\n        }\r\n\r\n        // return netIdName, explorerUrl;\r\n        return netIdName\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {!isError ? (<Button variant=\"outline-dark\" className=\"pl-2 ms-4\" onClick={goWallet}>\r\n                {`${tokenInfo.balance} YakID`}\r\n            </Button>) : (\r\n                <>\r\n                <p className=\"text-danger\">{`Wrong network : ${getNetwork(networkId)}`}</p>\r\n                <p>\r\n                <Button variant=\"danger\" className=\"pl-2 ms-4\" onClick={goWallet}>\r\n                    Switch to BSC\r\n                </Button>\r\n                </p>\r\n                </>\r\n            )\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nlet yakiTokenRepo: any\r\n\r\nconst YakiButton: React.FC<YakiWalletProps> = ({\r\n    web3, account, yakiAddress, disconnect, changeNetwork\r\n}) => {\r\n    const [isYakiTokenLoaded, setIsYakiTokenLoaded] = useState<boolean>(false)\r\n    const [tokenInfo, setTokenInfo] = useState<any>(undefined)\r\n    const [networkId, setNetworkId] = useState<string>(\"\")\r\n    const [isError, setIsError] = useState<boolean>(false)\r\n    const history = useHistory();\r\n\r\n    // console.log(yakiAddress)\r\n    const updateTik = () => {\r\n        if (yakiTokenRepo) {\r\n            // console.log('update info')\r\n                getYakiInfo()\r\n\r\n        } else {\r\n            console.log('yaki not loaded update')\r\n        }\r\n    }\r\n    // setInterval(updateTik, 1000)\r\n    var intId: any\r\n\r\n    useEffect(() => {\r\n\r\n        const init = async () => {\r\n            try {\r\n\r\n                // const networkType = await web3.eth.net.getNetworkType()\r\n                const networkType = await web3.eth.net.getId() // get the network id\r\n                yakiTokenRepo = await loadYakiTokenRepo(web3, yakiAddress, account)\r\n                setNetworkId(networkType)\r\n                await getYakiInfo()\r\n                setIsYakiTokenLoaded(true)\r\n                setIsError(false)\r\n            } catch (err) {\r\n                setIsYakiTokenLoaded(false)\r\n                setIsError(true)\r\n                console.error(err)\r\n            }\r\n        }\r\n\r\n        init().then(() => {\r\n            // if (intId) {\r\n            // clearInterval(intId)\r\n            // }\r\n            intId = setInterval(updateTik, 1000)\r\n        })\r\n        return () => {\r\n            clearInterval(intId)\r\n        }\r\n    }, [])\r\n\r\n    const getYakiInfo = async () => {\r\n        const decimals = await yakiTokenRepo.decimals()\r\n        const balanceAmount = await yakiTokenRepo.pointBanlanceOf(account)\r\n        // const balance = Web3.utils.toBN(balanceAmount).div(\r\n        //     Web3.utils.toBN(Math.pow(10, decimals))\r\n        // ).toString()\r\n        const balance = new BigNumber(balanceAmount).dividedBy(Math.pow(10, decimals)).toFixed(3)\r\n        // console.log(balance)\r\n\r\n        const yakiData = {\r\n            balance: balance,\r\n        }\r\n\r\n        setTokenInfo(yakiData)\r\n\r\n    }\r\n\r\n    // if (isYakiTokenLoaded) {\r\n\r\n    //     console.log(tokenInfo.balance)\r\n    // }\r\n\r\n    const goWallet = () => {\r\n        history.push(\"/wallet\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isYakiTokenLoaded && web3 ?\r\n                (\r\n                    // <Button variant=\"outline-dark\" className=\"pl-2 ms-4\" onClick={goWallet}>\r\n                    //     {`${tokenInfo.balance} YakID`}\r\n                    // </Button>\r\n                    <YakiButtonComp tokenInfo={tokenInfo} goWallet={goWallet}\r\n                        isError={isError} networkId={networkId}></YakiButtonComp>\r\n                )\r\n                : (\r\n                    web3 && isError ? (\r\n                        <YakiButtonComp tokenInfo={tokenInfo} goWallet={() => { changeNetwork(); disconnect() }}\r\n                            isError={isError} networkId={networkId}></YakiButtonComp>\r\n\r\n\r\n                    ) : (\r\n                        <Button variant=\"outline-dark\" className=\"pl-2 ms-4\">\r\n                            Loading\r\n                        </Button>\r\n\r\n                    )\r\n\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default YakiButton","import React, { useEffect, useState } from 'react'\r\nimport detectEthereumProvider from '@metamask/detect-provider'\r\nimport {\r\n  useWallet,\r\n  UseWalletProvider as UseWalletP,\r\n  ConnectionRejectedError\r\n} from 'use-wallet'\r\nimport { DropdownButton, Dropdown, Button, Container, Row, Col } from 'react-bootstrap'\r\nimport YakiButton from 'src/components/Web3Connect/YakiButton'\r\n// import detectEthereumProvider from '@metamask/detect-provider';\r\n// import bsc from '@binance-chain/bsc-use-wallet'\r\nimport {\r\n  BscConnector,\r\n  UserRejectedRequestError,\r\n} from '@binance-chain/bsc-connector'\r\n\r\n\r\ntype Props = {\r\n  web3: any\r\n  account1: string\r\n  setProviderData: Function\r\n}\r\n\r\nlet web3ConnectListenersAdded = false\r\n\r\nconst networks = {\r\n  polygon: {\r\n    chainId: `0x${Number(137).toString(16)}`,\r\n    chainName: \"Polygon Mainnet\",\r\n    nativeCurrency: {\r\n      name: \"MATIC\",\r\n      symbol: \"MATIC\",\r\n      decimals: 18\r\n    },\r\n    rpcUrls: [\"https://polygon-rpc.com/\"],\r\n    blockExplorerUrls: [\"https://polygonscan.com/\"]\r\n  },\r\n  bsc: {\r\n    chainId: `0x${Number(56).toString(16)}`,\r\n    chainName: \"Binance Smart Chain Mainnet\",\r\n    nativeCurrency: {\r\n      name: \"Binance Chain Native Token\",\r\n      symbol: \"BNB\",\r\n      decimals: 18\r\n    },\r\n    rpcUrls: [\r\n      \"https://bsc-dataseed1.binance.org\",\r\n      \"https://bsc-dataseed2.binance.org\",\r\n      \"https://bsc-dataseed3.binance.org\",\r\n      \"https://bsc-dataseed4.binance.org\",\r\n      \"https://bsc-dataseed1.defibit.io\",\r\n      \"https://bsc-dataseed2.defibit.io\",\r\n      \"https://bsc-dataseed3.defibit.io\",\r\n      \"https://bsc-dataseed4.defibit.io\",\r\n      \"https://bsc-dataseed1.ninicoin.io\",\r\n      \"https://bsc-dataseed2.ninicoin.io\",\r\n      \"https://bsc-dataseed3.ninicoin.io\",\r\n      \"https://bsc-dataseed4.ninicoin.io\",\r\n      \"wss://bsc-ws-node.nariox.org\"\r\n    ],\r\n    blockExplorerUrls: [\"https://bscscan.com\"]\r\n  }\r\n};\r\n\r\n//@ts-ignore\r\nconst changeNetwork = async ({ networkName, setError }) => {\r\n  try {\r\n    if (!window.ethereum) throw new Error(\"No crypto wallet found\");\r\n    //@ts-ignore\r\n    await window.ethereum.request({\r\n      method: \"wallet_addEthereumChain\",\r\n      params: [\r\n        {\r\n          //@ts-ignore\r\n          ...networks[networkName]\r\n        }\r\n      ]\r\n    });\r\n  } catch (err: any) {\r\n    //@ts-ignore\r\n    setError(err.message);\r\n  }\r\n};\r\n\r\n\r\nconst Web3ConnectButton: React.FC<Props> = ({ web3, account1, setProviderData }) => {\r\n  const connectProvider = (provider: any) => setProviderData(provider)\r\n  const disconnectProvider = () => setProviderData()\r\n  const { account, connect, reset, status } = useWallet()\r\n  const [loginStage, setLoginStage] = useState<boolean>(false)\r\n  const itemKey = 'dgov-login-state'\r\n  const [error, setError] = useState<boolean>();\r\n\r\n  const handleNetworkSwitch = async (networkName: any) => {\r\n    setError(false);\r\n    await changeNetwork({ networkName, setError });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    if (!web3ConnectListenersAdded) {\r\n      web3ConnectListenersAdded = true\r\n    }\r\n    const login_state = localStorage.getItem(itemKey)\r\n    if (login_state == '0' && !loginStage) {\r\n      connectMetamask()\r\n    } else if (login_state == '1' && loginStage) {\r\n      resetMetamask()\r\n    }\r\n  })\r\n\r\n  const resetMetamask = async () => {\r\n    reset()\r\n    disconnectProvider()\r\n    localStorage.setItem(itemKey, '1')\r\n    setLoginStage(false)\r\n  }\r\n\r\n  const connectMetamask = async () => {\r\n\r\n    //@ts-ignore\r\n    connect(\"bsc\").then(() => {\r\n      detectEthereumProvider().then((result) => {\r\n        if (result) {\r\n          //@ts-ignore\r\n          connectProvider(result)\r\n        }\r\n      })\r\n    })\r\n\r\n    localStorage.setItem(itemKey, '0')\r\n    setLoginStage(true)\r\n  }\r\n\r\n\r\n  return account1 ? (\r\n    <>\r\n      <Container>\r\n        {/* <Row> */}\r\n        <Row>\r\n          <Col md={4}>\r\n            <DropdownButton id=\"dropdown-item-button\" title={account1.slice(0, 4) + \"...\" + account1.slice(-4)} variant=\"secondary\" className=\"me-5\">\r\n              {/* <Dropdown.ItemText>{account1}</Dropdown.ItemText> */}\r\n              <Dropdown.Item as=\"button\" onClick={() => resetMetamask()}>Disconnect  </Dropdown.Item>\r\n            </DropdownButton>\r\n          </Col>\r\n          {/* </Row> */}\r\n          {/* <Row className=\"mt-2\"> */}\r\n          <Col md={7}>\r\n            {/* @ts-ignore */}\r\n            <YakiButton web3={web3} account={account1} yakiAddress={process.env.REACT_APP_YAKI_ADDRESS} disconnect={disconnectProvider} changeNetwork={() => handleNetworkSwitch('bsc')}></YakiButton>\r\n          </Col>\r\n          {/* </Row> */}\r\n        </Row>\r\n      </Container>\r\n    </>\r\n\r\n  ) : (\r\n    <Button variant=\"secondary\" onClick={connectMetamask}>\r\n      Connect\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default Web3ConnectButton\r\n\r\n// const Web3WalletProvider: React.FC<Props> = ({ web3, account1, setProviderData }) => {\r\n\r\n//   return (\r\n//     <UseWalletP\r\n//       connectors={{\r\n//         //@ts-ignore\r\n//         bsc: {\r\n//           web3ReactConnector() {\r\n//             return new BscConnector({ supportedChainIds: [56, 97] })\r\n//           },\r\n//           handleActivationError(err: any) {\r\n//             if (err instanceof UserRejectedRequestError) {\r\n//               return new ConnectionRejectedError()\r\n//             }\r\n//           },\r\n//         },\r\n//       }}\r\n//     >\r\n//       <Web3ConnectButton account1={account1} setProviderData={setProviderData} web3={web3} />\r\n//     </UseWalletP>\r\n//   )\r\n// }\r\n\r\n// export default Web3WalletProvider","import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n})]);"],"sourceRoot":""}