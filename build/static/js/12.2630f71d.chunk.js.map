{"version":3,"sources":["components/Web3Connect/index.tsx","components/Header.tsx"],"names":["web3ConnectListenersAdded","Web3ConnectButton","account1","setProviderData","connectProvider","provider","useWallet","connect","account","reset","status","useEffect","resetMetamask","a","connectMetamask","detectEthereumProvider","DropdownButton","id","title","variant","Dropdown","ItemText","Item","as","onClick","Button","Header","Navbar","Container","Brand","href","Nav","Link","Web3Connect"],"mappings":"yOAcIA,GAA4B,EAoEjBC,EAjE4B,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAChDC,EAAkB,SAACC,GAAD,OAAmBF,EAAgBE,IAE3D,EAA4CC,cAA3BC,GAAjB,EAAQC,QAAR,EAAiBD,SAASE,EAA1B,EAA0BA,MAA1B,EAAiCC,OAEjCC,qBAAU,WACHX,IACHA,GAA4B,MAIhC,IAAMY,EAAa,uCAAG,sBAAAC,EAAA,sDACpBJ,IAV+BN,IASX,2CAAH,qDAKbW,EAAe,uCAAG,4BAAAD,EAAA,6DAGtBN,IAHsB,SAWCQ,MAXD,QAWhBV,EAXgB,SAiBpBD,EAAgBC,GAjBI,2CAAH,qDAkCrB,OAAOH,EAIL,eAACc,EAAA,EAAD,CAAgBC,GAAG,uBAAuBC,MAAM,UAAUC,QAAQ,YAAlE,UACE,cAACC,EAAA,EAASC,SAAV,UAAoBnB,IACpB,cAACkB,EAAA,EAASE,KAAV,CAAeC,GAAG,SAASC,QAAS,kBAAMZ,KAA1C,2BAGF,cAACa,EAAA,EAAD,CAAQN,QAAQ,YAAYK,QAASV,EAArC,sBCrCWY,UAzBuB,SAAC,GAAkC,IAAhClB,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAC9C,OACI,cAACwB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WAEI,cAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,QAAQP,GAAIQ,IAAIC,KAAnC,sBAIA,cAACL,EAAA,EAAOE,MAAR,CAAcC,KAAK,WAAWP,GAAIQ,IAAIC,KAAtC,qBAGA,cAACL,EAAA,EAAOE,MAAR,CAAcC,KAAK,SAASP,GAAIQ,IAAIC,KAApC,mBAIA,cAACD,EAAA,EAAD,UACI,cAACE,EAAD,CAAmB/B,SAAUM,EAASL,gBAAiBA","file":"static/js/12.2630f71d.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport detectEthereumProvider from '@metamask/detect-provider'\r\nimport {\r\n  useWallet,\r\n} from 'use-wallet'\r\nimport { DropdownButton, Dropdown, Button } from 'react-bootstrap'\r\n// import detectEthereumProvider from '@metamask/detect-provider';\r\n\r\n\r\ntype Props = {\r\n  account1: string\r\n  setProviderData: Function\r\n}\r\n\r\nlet web3ConnectListenersAdded = false\r\n\r\n\r\nconst Web3ConnectButton: React.FC<Props> = ({ account1, setProviderData }) => {\r\n  const connectProvider = (provider: any) => setProviderData(provider)\r\n  const disconnectProvider = () => setProviderData()\r\n  const { account, connect, reset, status } = useWallet()\r\n\r\n  useEffect(() => {\r\n    if (!web3ConnectListenersAdded) {\r\n      web3ConnectListenersAdded = true\r\n    }\r\n  })\r\n\r\n  const resetMetamask = async () => {\r\n    reset()\r\n    disconnectProvider()\r\n  }\r\n\r\n  const connectMetamask = async () => {\r\n    //@ts-ignore\r\n    // connect('bsc')\r\n    connect()\r\n    // const provider = await detectEthereumProvider()\r\n    // const provider = <window className=\"bin</window>\r\n\r\n    //this is only for bsc\r\n    //@ts-ignore\r\n    // const provider = window.BinanceChain\r\n\r\n    const provider = await detectEthereumProvider();\r\n\r\n    if (provider) {\r\n      // if (provider !== window.ethereum) {\r\n      // console.log('Do you have multiple wallets installed?')\r\n      // }\r\n      connectProvider(provider)\r\n    }\r\n\r\n  }\r\n\r\n  // const getTypeOfAccount = () => {\r\n  //   let type: string\r\n  //   if (account1 === process.env.REACT_APP_OPERATOR_ADDRESS) {\r\n  //     type = 'Operator'\r\n  //   } else if (account1 === process.env.REACT_APP_ORACLE_ADDRESS) {\r\n  //     type = 'Oracle'\r\n  //   } else {\r\n  //     type = 'Trader'\r\n  //   }\r\n  //   return type\r\n  // }\r\n\r\n  return account1 ? (\r\n    // <Button variant=\"contained\" onClick={() => resetMetamask()}>\r\n    //   Disconnect {account1}\r\n    // </Button>\r\n    <DropdownButton id=\"dropdown-item-button\" title=\"Account\" variant=\"secondary\">\r\n      <Dropdown.ItemText>{account1}</Dropdown.ItemText>\r\n      <Dropdown.Item as=\"button\" onClick={() => resetMetamask()}>Disconnect</Dropdown.Item>\r\n    </DropdownButton>\r\n  ) : (\r\n    <Button variant=\"secondary\" onClick={connectMetamask}>\r\n      Connect\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default Web3ConnectButton\r\n","import React, {lazy} from \"react\";\r\nimport {\r\n    Container,\r\n    Navbar,\r\n    Nav,\r\n} from \"react-bootstrap\";\r\nimport Web3ConnectButton from 'src/components/Web3Connect'\r\n// const Web3ConnectButton = lazy(()=> import('src/components/Web3Connect'))\r\n\r\ntype HeaderProps = {\r\n    account: any\r\n    setProviderData: any\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ account, setProviderData }) => {\r\n    return (\r\n        <Navbar>\r\n            <Container>\r\n\r\n                <Navbar.Brand href=\"/home\" as={Nav.Link}>\r\n                    DGOV 2.0\r\n                </Navbar.Brand>\r\n\r\n                <Navbar.Brand href=\"/markets\" as={Nav.Link}>\r\n                    Markets\r\n                </Navbar.Brand>\r\n                <Navbar.Brand href=\"/about\" as={Nav.Link}>\r\n                    {/* <Nav.Link href=\"/about\"> About</Nav.Link> */}\r\n                    About\r\n                </Navbar.Brand>\r\n                <Nav>\r\n                    <Web3ConnectButton account1={account} setProviderData={setProviderData} />\r\n                </Nav>\r\n            </Container>\r\n        </Navbar>\r\n\r\n    )\r\n}\r\n\r\nexport default Header"],"sourceRoot":""}